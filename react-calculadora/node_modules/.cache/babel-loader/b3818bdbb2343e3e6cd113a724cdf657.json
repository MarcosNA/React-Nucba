{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Desktop/nucba-react-calculadora/src/components/Calculator/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Button from '../Button';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [resultado, setResultado] = useState({\n    n1: 0,\n    n2: 0\n  });\n  const [total, setTotal] = useState(0);\n\n  const getDataInput = (e, inputOrder) => {\n    if (inputOrder === 'number1') {\n      setResultado(state => ({ ...state,\n        n1: e.target.value\n      }));\n    }\n\n    if (inputOrder === 'number2') {\n      setResultado(state => ({ ...state,\n        n2: e.target.value\n      }));\n    }\n  };\n\n  const sumar = () => {\n    resultado.n1 && resultado.n2 && setTotal(parseInt(resultado.n1) + parseInt(resultado.n2));\n  };\n\n  const restar = () => {\n    resultado.n1 && resultado.n2 && setTotal(parseInt(resultado.n1) - parseInt(resultado.n2));\n  };\n\n  const multiplicar = () => {\n    resultado.n1 && resultado.n2 && setTotal(parseInt(resultado.n1) * parseInt(resultado.n2));\n  };\n\n  const dividir = () => {\n    resultado.n1 && resultado.n2 && setTotal(parseInt(resultado.n1) / parseInt(resultado.n2));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultado\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => getDataInput(e, 'number1'),\n        type: \"number\",\n        placeholder: \"Primer numero\",\n        value: resultado.n1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => getDataInput(e, 'number2'),\n        type: \"number\",\n        placeholder: \"Segundo numero\",\n        value: resultado.n2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), total && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Sumar\",\n      fn: () => sumar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Restar\",\n      fn: () => restar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Multiplicar\",\n      fn: () => multiplicar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Dividir\",\n      fn: () => dividir()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calculator, \"n2CA66+6Dk+qChYfG1s8y2Rh8Ts=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/home/marcos/Desktop/nucba-react-calculadora/src/components/Calculator/index.jsx"],"names":["useState","Button","Calculator","resultado","setResultado","n1","n2","total","setTotal","getDataInput","e","inputOrder","state","target","value","sumar","parseInt","restar","multiplicar","dividir"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Button from '../Button'\n\nimport './styles.scss'\n\nconst Calculator = () => {\n    const [resultado, setResultado] = useState({ n1: 0, n2: 0 })\n    const [total, setTotal] = useState(0)\n\n    const getDataInput = (e, inputOrder) => {\n        if(inputOrder === 'number1'){\n            setResultado(state => ({ ...state, n1: e.target.value }))\n        } \n\n        if(inputOrder === 'number2'){\n            setResultado(state => ({ ...state, n2: e.target.value }))\n        }\n    }\n\n    const sumar = () => {\n        resultado.n1 && resultado.n2 && setTotal(parseInt(resultado.n1) + parseInt(resultado.n2))\n    }\n\n    const restar = () => {\n        resultado.n1 && resultado.n2 && setTotal(parseInt(resultado.n1) - parseInt(resultado.n2))\n    }\n\n    const multiplicar = () => {\n        resultado.n1 && resultado.n2 && setTotal(parseInt(resultado.n1) * parseInt(resultado.n2))\n    }\n\n    const dividir = () => {\n        resultado.n1 && resultado.n2 && setTotal(parseInt(resultado.n1) / parseInt(resultado.n2))\n    }\n\n\n    return(\n        <section>\n            <h2>Calculator</h2>\n            <div className='resultado'>\n                <input \n                    onChange={e => getDataInput(e, 'number1')} \n                    type='number' \n                    placeholder='Primer numero' \n                    value={resultado.n1}\n                />\n                <input \n                    onChange={e => getDataInput(e, 'number2')} \n                    type='number' \n                    placeholder='Segundo numero' \n                    value={resultado.n2}\n                />\n                {total && <span>{total}</span>}\n            </div>\n            <Button text='Sumar' fn={() => sumar()} />\n            <Button text='Restar' fn={() => restar()} />\n            <Button text='Multiplicar' fn={() => multiplicar()} />\n            <Button text='Dividir' fn={() => dividir()} /> \n        </section>\n    )\n}\n\nexport default Calculator"]},"metadata":{},"sourceType":"module"}